name: Firmware build

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      enable_main:
        description: Build default boards (linux, ESP, Microbit)
        type: boolean
        default: false
      enable_dfu:
        description: Build boards with DFU (puckjs, pixljs, banglejs)
        type: boolean
        default: false
      enable_padded:
        description: Build boards with bootloader padding (espruinoboard, -wifi, pico)
        type: boolean
        default: false
      enable_emulator:
        description: Build emulator for banglejs
        type: boolean
        default: false
      

permissions:
  contents: read

jobs:

  # normal builds
  build_main:
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.enable_main }}
    runs-on: ubuntu-20.04
    strategy:
      # devices to build for
      matrix:
        board: [LINUX]
      # try and build for all devices even if one fails
      fail-fast: false 
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: make ${{ matrix.board }}
      env:
        TRAVIS: 1
        RELEASE: 1
        BOARD: ${{ matrix.board }} 
        UPLOADTOKEN: ${{ secrets.UPLOADTOKEN }}  
      run: |
        source ./scripts/provision.sh  ${{ matrix.board }}
        make
        ./scripts/ci_upload.sh
    - name: Upload ${{ matrix.board }} build artifact
      uses: actions/upload-artifact@v4.4.3
      with:
        name: ${{ matrix.board }}
        path: |
          bin/*.bin
          bin/*.hex
          bin/*.tgz
          bin/*.zip
    
        
  # Builds with DFU_UPDATE_BUILD=1        
  build_dfu:
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.enable_dfu }}
    runs-on: ubuntu-20.04
    strategy:
      # devices to build for
      matrix:
        board: [AMIIBOLINK_MINIMAL]
      # try and build for all devices even if one fails
      fail-fast: false 
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0    
    - name: make ${{ matrix.board }}
      env:
        RELEASE: 1
        BOOTLOADER: 1
        BOARD: ${{ matrix.board }} 
        UPLOADTOKEN: ${{ secrets.UPLOADTOKEN }}  
      run: |
        source ./scripts/provision.sh  ${{ matrix.board }}
        make
        ./scripts/ci_upload.sh       
    - name: Upload ${{ matrix.board }} build artifact
      uses: actions/upload-artifact@v4.4.3
      with:
        name: ${{ matrix.board }}
        path: |
          bin/*.bin
          bin/*.hex
          bin/*.tgz
          bin/*.zip
       
  # Builds with PAD_FOR_BOOTLOADER=1
  build_padded:
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.enable_padded }}
    runs-on: ubuntu-20.04
    strategy:
      # devices to build for
      matrix:
        board: [ESPRUINOBOARD]
      # try and build for all devices even if one fails
      fail-fast: false 
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: make ${{ matrix.board }}
      env:
        TRAVIS: 1
        RELEASE: 1
        PAD_FOR_BOOTLOADER: 1
        BOARD: ${{ matrix.board }} 
        UPLOADTOKEN: ${{ secrets.UPLOADTOKEN }}  
      run: |
        source ./scripts/provision.sh  ${{ matrix.board }}
        make
        ./scripts/ci_upload.sh 
    - name: Upload ${{ matrix.board }} build artifact
      uses: actions/upload-artifact@v4.4.3
      with:
        name: ${{ matrix.board }}
        path: |
          bin/*.bin
          bin/*.hex
          bin/*.tgz
          bin/*.zip
 
  # emulator builds
  build_emulator:
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.enable_emulator }}
    runs-on: ubuntu-20.04
    strategy:
      # devices to build for
      matrix:  # banglejs,   banglejs2
        board: [EMSCRIPTEN, EMSCRIPTEN2]
      # try and build for all devices even if one fails
      fail-fast: false 
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: make ${{ matrix.board }}
      env:
        TRAVIS: 1
        RELEASE: 1
        BOARD: ${{ matrix.board }} 
        UPLOADTOKEN: ${{ secrets.UPLOADTOKEN }}  
      run: |
        source ./scripts/provision.sh  ${{ matrix.board }}
        make
        ./scripts/ci_upload.sh
    - name: Upload ${{ matrix.board }} build artifact
      uses: actions/upload-artifact@v4.4.3
      with:
        name: ${{ matrix.board }}
        path: |
          bin/*.js
 
# Disable doc building for now 
#  docs:
#    runs-on: ubuntu-20.04      
#    steps:
#    - name: makedocs
#      run: make docs


